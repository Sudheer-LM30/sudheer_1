#include <iostream>
#include <pthread.h>
#include <unistd.h>
#include <chrono>
using namespace std;
using namespace std::chrono;

void *thread1(void *arg)
{
 while(1){
 	
    auto start = system_clock::now();
    cout<<"Thread 1 started"<<endl;
    usleep(1);
    cout<<"Thread 1 finished"<<endl;
    auto end = system_clock::now();
    
    duration<double> elapsed_seconds = end-start;
    std::time_t end_time = system_clock::to_time_t(end);
    std::cout<< " Thread finished at " << std::ctime(&end_time) << "Elapsed time: " << elapsed_seconds.count() << "s\n";
    
 }
 pthread_exit(NULL);
}

void *thread2(void *arg)
{
 while(1){
 	
    auto start = system_clock::now();
    cout<<"Thread 2 started"<<endl;
    usleep(1);
    cout<<"Thread 2 finished"<<endl;
    auto end = system_clock::now();
    
    duration<double> elapsed_seconds = end-start;
    std::time_t end_time = system_clock::to_time_t(end);
    std::cout<< " Thread finished at " << std::ctime(&end_time) << "Elapsed time: " << elapsed_seconds.count() << "s\n";
    
 }
 pthread_exit(NULL);
}

void *thread3(void *arg)
{
 while(1){
    auto start = system_clock::now(); 	
    cout<<"Thread 3 started"<<endl;
    usleep(1);
    cout<<"Thread 3 finished"<<endl;
    auto end = system_clock::now();
    
    duration<double> elapsed_seconds = end-start;
    std::time_t end_time = system_clock::to_time_t(end);
    std::cout<< " Thread finished at " << std::ctime(&end_time) << "Elapsed time: " << elapsed_seconds.count() << "s\n";
    
 }
 pthread_exit(NULL);

}

int main(int argc , char *argv[])
{
	
 pthread_t t1, t2, t3; 
 pthread_create(&t1, NULL, thread1, NULL);
 pthread_create(&t2, NULL, thread2, NULL);
 pthread_create(&t3, NULL, thread3, NULL);
 
 pthread_join(t1, NULL);
 pthread_join(t2, NULL);
 pthread_join(t3, NULL); 
 
 return 0;
 
}